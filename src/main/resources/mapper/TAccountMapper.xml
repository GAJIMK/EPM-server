<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dartmedia.dmss.mapper.TAccountMapper">
	
    <!-- XML 파일 주석 쓰는 방법 -->
    <!-- id명은 AccountMapper 클래스의 함수명과 똑같이 해주기 -->
    <select id="findAll" resultType="TAccount">
        SELECT	*
        FROM 	tAccount
    </select>

    <select id="findAccountsByIdNo" resultType="TAccount">
        SELECT	*
        FROM 	tAccount
        WHERE IDNo LIKE '%'+#{keyword}+'%'

    </select>

    <select id="findAccountByIdNoAndAccountNm" resultType="TAccount">
        SELECT	*
        FROM 	tAccount
        WHERE (IDNo like '%'+#{keyword}+'%') or (AccountNm like '%'+#{keyword}+'%');
    </select>

    <select id="read" resultType="TAccount">
        SELECT  *
        FROM    tAccount
        WHERE   IDNo=#{IDNo}
    </select> <!-- #을 쓰면 정수는 정수열, 문자는 문자열로, $는 String --> 
    
    <insert id="create"> 
        <!--selectKey resultType="string" keyProperty="AccountId" order="BEFORE">
            SELECT MAX(AccountId)+1 FROM Account        
        </selectKey-->   
        INSERT 
        INTO tAccount
                (IDNo
                ,AccountId
                ,tpAccount
                ,AccountNm
                ,TeamNo
                ,tpPosition
                ,Password
                ,PhoneNo
                ,ExchangeNo
                ,MobileNo
                ,eMail
                ,tpPublish
                ,PostNo
                ,Addr1
                ,Addr2
                ,BirthDay) 
        VALUES
                (#{IDNo}
                ,#{AccountId}
                ,#{tpAccount}
                ,#{AccountNm}
                ,#{TeamNo}
                ,#{tpPosition}
                ,#{Password}
                ,#{PhoneNo}
                ,#{ExchangeNo}
                ,#{MobileNo}
                ,#{eMail}
                ,#{tpPublish}
                ,#{PostNo}
                ,#{Addr1}
                ,#{Addr2}
                ,#{BirthDay}) 
    </insert> <!-- insert, update는 리턴타입 없다. select만 --> 
    
    <update id="update"> 
        UPDATE tAccount
        SET AccountId=#{AccountId}
            ,tpAccount=#{tpAccount}
            ,AccountNm=#{AccountNm}
            ,TeamNo=#{TeamNo}
            ,tpPosition=#{tpPosition}
            ,Password=#{Password}
            ,PhoneNo=#{PhoneNo}
            ,ExchangeNo=#{ExchangeNo}
            ,MobileNo=#{MobileNo}
            ,eMail=#{eMail}
            ,tpPublish=#{tpPublish}
            ,PostNo=#{PostNo}
            ,Addr1=#{Addr1}
            ,Addr2=#{Addr2}
            ,BirthDay=#{BirthDay}
        WHERE IDNo=#{IDNo}
    </update> 

    <update id="updateAccountNm"> 
        UPDATE tAccount
        SET AccountNm=#{AccountNm}
        WHERE IDNo=#{IDNo}
    </update> 

    <update id="updateAccountId"> 
        UPDATE tAccount
        SET AccountId=#{AccountId}
        WHERE IDNo=#{IDNo}
    </update>

    <update id="updateEmail"> 
        UPDATE tAccount
        SET eMail=#{eMail}
        WHERE IDNo=#{IDNo}
    </update>

    <update id="updatePassword"> 
        UPDATE tAccount
        SET Password=#{Password}
        WHERE IDNo=#{IDNo}
    </update>
    
    <delete id="delete"> 
        DELETE 
        FROM tAccount
        WHERE IDNo=#{IDNo}
    </delete>

    <select id="findAccountByEmail" resultType="TAccount">
        SELECT	eMail
        FROM 	tAccount
        WHERE eMail=#{eMail}
    </select>

    <select id="findAccountByIdNoAndAccountNmWithAppoint" resultType="TAccount">
        WITH newestAppoint AS(
            (SELECT *
             FROM(
                SELECT tAppoint.IDNo, tAppoint.DirectorYn, tAppoint.ManagerYn, row_NUMBER() Over(partition BY tAppoint.IDNo ORDER BY tAppoint.PublishDay DESC) AS RankNo
                FROM tAppoint) T
            WHERE RankNo = 1)
        )

        SELECT tAccount.IDNO, tAccount.AccountNm, tAccount.TeamNo, tAccount.tpPosition, tAccount.eMail, tAccount.tpAccount,
               newestAppoint.DirectorYn, newestAppoint.ManagerYn
        FROM tAccount RIGHT OUTER JOIN newestAppoint ON tAccount.IDNo = newestAppoint.IDNo
        WHERE (tAccount.AccountNm=#{keyword}) OR (tAccount.IDNo=#{keyword})
    </select>
</mapper>